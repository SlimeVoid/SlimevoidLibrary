buildscript {
    repositories {
        jcenter()
        mavenCentral()
        maven {
            url = 'http://files.minecraftforge.net/maven'
        }
        maven {
            url = 'https://oss.sonatype.org/content/repositories/snapshots/'
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
    }
}

repositories {
	mavenCentral()
}

apply plugin: 'maven'
apply plugin: 'net.minecraftforge.gradle.forge'

def number = '3.1.0.0'
def release = 'alpha'
def mcversion = '1.10.2'
def forge = '12.18.2.2099'
def map = 'snapshot_20160518'
def mc = mcversion + '-' + forge
def pack = 'library'
def github = 'SlimevoidLibrary'

version = number + '-' + release + '-' + mcversion
group = 'net.slimevoid'
archivesBaseName = 'SlimevoidLibrary'

dependencies {
    compile 'net.sourceforge.argo:argo:3.40'
}

minecraft {
    version = mc
    mappings = map
    if  (file('../run').exists()) {
       runDir = "../run"
    } else {
       runDir = "run"
    }
    replaceIn 'net/slimevoid/' + pack + '/core/lib/CoreLib.java'
    replace '@VERSION@', project.version
    replace 'MOD_DEPENDENCIES', 'BLANK_DEPENDENCIES'
    replace 'ACTUAL_DEPENDENCIES ', 'MOD_DEPENDENCIES'
    replace '@FORGEVERSION@', forge
}

processResources {
    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

sourceSets {
    main {
        output.resourcesDir = output.classesDir
    }
}

configurations {
	deployJars
}

dependencies {
    deployJars 'org.apache.maven.wagon:wagon-ssh:2.2'
}

uploadArchives {
	dependsOn 'reobf'
    repositories.mavenDeployer {
    	configuration = configurations.deployJars
        if (project.hasProperty("slimevoidUsername")) {
            repository(url: 'scp://hyda.slimevoid.net/home/maven/www/repos') {
                authentication(userName: slimevoidUsername, password: slimevoidPassword)
            }
        } else {
            repository(url: 'file://localhost/' + project.file('build/repo').getAbsolutePath())
        }
        pom {
            groupId = project.group
            version = project.version
            artifactId = project.archivesBaseName
        }
        pom.project {
            name project.archivesBaseName
            packaging 'jar'
            description archivesBaseName
            url 'https://github.com/Slimevoid/' + github

            scm {
                url 'https://github.com/Slimevoid/' + github
                connection 'scm:git:git://github.com/Slimevoid/' + github + '.git'
                developerConnection 'scm:git:git@Slimevoid/' + github + '.git'
            }

            issueManagement {
                system 'github'
                url 'https://github.com/Slimevoid/' + github + '/issues'
            }

            licenses {
                license {
                    name 'Lesser General Public Licence'
                    url 'https://raw.github.com/Slimevoid/' + github + '/master/LICENSE'
                    distribution 'repo'
                }
            }

            developers {
                developer {
                    id 'Eurymachus'
                    name 'Eurymachus'
                    roles { role 'developer' }
                }
                developer {
                    id 'Slimevoid'
                    name 'Slimevoid Dev Team'
                    roles { role 'developer' }
                }
            }
        }
    }
}
